// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Class {
  id            String          @id @default(cuid())
  className     String          @db.VarChar(255)
  host          String
  subject       String?
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  file          FileStorage[]
  classCalendar ClassCalendar[]
  classUser     ClassUser[]
}

model ClassCalendar {
  id             String           @id @default(cuid())
  class          Class            @relation(fields: [classId], references: [id])
  classId        String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  studyDate      DateTime
  UserAttendance UserAttendance[]
}

model UserAttendance {
  id              String        @id @default(cuid())
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  status          Int           @default(-1)
  classCalendar   ClassCalendar @relation(fields: [classCalendarId], references: [id])
  classCalendarId String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
}

model ClassUser {
  id      String  @id @default(cuid())
  class   Class   @relation(fields: [classId], references: [id])
  classId String
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  status  Boolean @default(false)
}

model User {
  id               String           @id @default(uuid())
  email            String           @unique
  name             String?
  password         String
  roles            Role             @default(USER)
  points           String?
  active           Boolean          @default(false)
  attendanceStatus UserAttendance[]
  classUser        ClassUser[]
}

model FileStorage {
  id      String @id @default(cuid())
  classId String
  link    String
  class   Class  @relation(fields: [classId], references: [id])
}

enum Role {
  ADMIN
  USER
}
